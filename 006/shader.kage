//go:build ignore

//kage:unit pixels

package main

var Time float
var Cursor vec2

func colorPalette(t float) vec3 {
	a := vec3(0.5, 0.5, 0.5)
	b := vec3(0.5, 0.5, 0.5)
	c := vec3(1, 1, 1)
	d := vec3(0, 0.1, 0.2)
	return a + b * cos(6.28318 * (c * t + d))
}

func Fragment(dstPos vec4, srcPos vec2, color vec4) vec4 {
	dstSize := imageDstSize()
	uv := (dstPos.xy - imageDstOrigin()) *2 - dstSize
	uv = uv / min(dstSize.x, dstSize.y)

	uv0 := uv
	finalColor := vec3(0)
	for i := 0; i < 4; i++ {
		uv = fract(uv*1.5)-0.5

		d := length(uv) * exp(-length(uv0))
		index := float(i)
		col := colorPalette(length(uv0) + index * 0.4 + Time * 0.4)
		d = sin(d*8+Time)/8
		d = abs(d)
		d = pow(0.01 / d, 1.2)

		finalColor += col * d
	}

	return vec4(finalColor, 1)
}
