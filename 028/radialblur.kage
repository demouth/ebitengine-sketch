// Copyright 2020 The Ebiten Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:build ignore

//kage:unit pixels

package main

func Fragment(dstPos vec4, srcPos vec2, color vec4) vec4 {
	clr := imageSrc2UnsafeAt(srcPos)
	weightSum := 0.0
	sum := clr
	for x := -18; x < 18; x++ {
		for y := -18; y < 18; y++ {
			sample := vec2(float(x), float(y))
			weight := gauss(float(x), float(y), 120)
			weightSum += weight
			sum += imageSrc0At(srcPos + sample) * weight
		}
	}
	sum *= 1.0 / weightSum
	// return sum
	if sum.x > 0.6 {
		return vec4(1, 1, 1, 1)
	}
	return vec4(0, 0, 0, 1)
}
func gauss(x, y, sigma float) float {
	return 1.0 / (2.0 * 3.14 * sigma * sigma) * exp(-(x * x + y * y) / (2.0 * sigma * sigma))
}
