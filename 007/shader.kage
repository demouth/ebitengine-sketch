// Galaxy of Universes
// https://www.shadertoy.com/view/MdXSzS

//go:build ignore

//kage:unit pixels

package main

var Time float

func Fragment(dstPos vec4, srcPos vec2, color vec4) vec4 {
	dstSize := imageDstSize()
	uv := (dstPos.xy - imageDstOrigin()) * 2 - dstSize
	uv *= 0.5
	uv = uv / min(dstSize.x, dstSize.y)

	t := Time * 0.1 + ((0.25+0.05*sin(Time*0.1))/(length(uv.xy)+0.07))*2.2
	si := sin(t)
	co := cos(t)
	ma := mat2(co, si, -si, co)
	v1 := 0.0
	v2 := 0.0
	v3 := 0.0
	s := 0.0

	for i := 0; i < 90; i++ {
		p := s * vec3(uv.x, uv.y, 0.0)
		p.xy *= ma
		p += vec3(0.22, 0.3, s-1.5-sin(Time*0.13)*0.1)
		for j := 0; j < 8; j++ {
			p = abs(p) / dot(p, p) - 0.659
		}
		v1 += dot(p, p) * 0.0015*(1.8+sin(length(uv.xy * 13.0)+0.5-Time*0.2))
		v2 += dot(p, p) * 0.0013*(1.5+sin(length(uv.xy * 14.5)+1.2-Time*0.3))
		v3 += length(p.xy * 10.0)*0.0003
		s += 0.035
	}
	len := length(uv)
	v1 *= smoothstep(0.7, 0.0, len)
	v2 *= smoothstep(0.5, 0.0, len)
	v3 *= smoothstep(0.9, 0.0, len)
	col := vec3(
		v3 * (1.5+sin(Time*0.2)*0.4),
		(v1+v3)*0.3,
		v2,
	) + smoothstep(0.2, 0.0, len) * 0.85 + smoothstep(0.0, 0.6, v3)*0.3
	finalColor := vec4(min(pow(abs(col), vec3(1.2)), 1.0), 1.0)
	return vec4(finalColor)
}
